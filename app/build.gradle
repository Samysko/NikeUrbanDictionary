apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.example.nikeurbandictionary"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        def URL_URBAN_DICTIONARY = "URL_URBAN_DICTIONARY"
        def HOST_URBAN_DICTIONARY = "HOST_URBAN_DICTIONARY"
        def KEY_URBAN_DICTIONARY = "KEY_URBAN_DICTIONARY"

        debug {
            buildConfigField "String", URL_URBAN_DICTIONARY, '"https://mashape-community-urban-dictionary.p.rapidapi.com"'
            buildConfigField "String", KEY_URBAN_DICTIONARY, '"0d118d6ff9mshe2985ac62774297p19e72djsnd1fd3c13a8e6"'
            buildConfigField "String", HOST_URBAN_DICTIONARY, '"mashape-community-urban-dictionary.p.rapidapi.com"'
        }
        staging {
            buildConfigField "String", URL_URBAN_DICTIONARY, '"https://mashape-community-urban-dictionary.p.rapidapi.com"'
            buildConfigField "String", KEY_URBAN_DICTIONARY, '"0d118d6ff9mshe2985ac62774297p19e72djsnd1fd3c13a8e6"'
            buildConfigField "String", HOST_URBAN_DICTIONARY, '"mashape-community-urban-dictionary.p.rapidapi.com"'
        }
        release {
            debuggable = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", URL_URBAN_DICTIONARY, '"https://mashape-community-urban-dictionary.p.rapidapi.com"'
            buildConfigField "String", KEY_URBAN_DICTIONARY, '"0d118d6ff9mshe2985ac62774297p19e72djsnd1fd3c13a8e6"'
            buildConfigField "String", HOST_URBAN_DICTIONARY, '"mashape-community-urban-dictionary.p.rapidapi.com"'
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}


kapt {
    generateStubs = true
}

dependencies {
    def lifecycle_version = "2.2.0-alpha01"
    def moshi_version = "1.9.2"
    def retrofit_version = "2.6.0"
    def kotlin_coroutines_version = "1.3.0"
    def test_coroutines_version = "1.3.5"
    def lottie_version = "3.4.0"
    def android_test_version = "1.2.0"
    def dagger_version = "2.27"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    // Live Data
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    testImplementation 'junit:junit:4.12'
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    // Coroutines Test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$test_coroutines_version"
    // Lottie
    implementation "com.airbnb.android:lottie:$lottie_version"
    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Testing
    testImplementation "androidx.test:core:$android_test_version"
    androidTestImplementation "androidx.test:rules:$android_test_version"
    androidTestImplementation "androidx.test:runner:$android_test_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
